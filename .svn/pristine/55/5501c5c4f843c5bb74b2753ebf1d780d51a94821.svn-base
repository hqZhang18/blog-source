---
title: D3.js常用API
date: 2016-12-17 23:29:35
categories: 
  - 技术
  - D3.js
tags: D3.js

---

 数组长度与元素不一致时处理方式
 选择集处理   enter()/exit()
 <!--more--> 
 enter() 没有足够的元素与数组长度匹配时自动添加剩余的元素个数 ，结合append()使用
 数组长度大于元素个数使用enter()结合append()自动补齐
 

```javascript
var dataset = [10,20,30,40]
var p = d3.select('#enter')  //选择第一个ID为enter的元素
        .selectAll('p')   //选择enter的元素下的所有p元素
        .data(dataset)    
        .enter()
        .append('p')
        .html(function(d,i){
            return ''+d+' enter'    //设置p元素中的内容
    })
        //这里的样式及类名只会给后面新增的p元素添加
        .style('color','red')   //设置字体颜色
        .attr('class', 'test')  //添加一个名为test的类
        .classed('classed', true) //添加一个名为classed的类
 ```       


 exit()存在多余的数据，没有数据与之对应，结合remove()删除多余的元素
 数组长度小于元素个数使用exit()结合remove()删除多余元素
```javascript
var div    =  d3.select('#exit').selectAll('p')
        .data(dataset)
        .exit()
        .remove()
        .html(function(d,i){
            return d
        })
```

### 比例尺
在绘制图的过程中会遇到数值过大或过小，例如：   
对以下两组数组，绝不可能用 2.5 个像素来代表矩形的宽度，那样根本看不见；
也不可能用 2500 个像素来代表矩形的宽度，画布也没有那么长。  
```javascript   
var data1 = [ 2.5 , 2.1 , 1.7 , 1.3 , 0.9 ]
var data2 = [ 2500, 2100, 1700, 1300, 900 ]
//当遇到这种情况可使用线性比例尺
var data= [1.2, 2.3, 0.9, 1.5, 3.3];
var min = d3.min(data)   //获取数组中的最小值
var max = d3.max(data)   //获取数组中的最大值

var linear = d3.scale.linear()  //构建一个线性比例尺
        .domain([min, max])   //设置比例尺的定义域
        .range([0, 300])   //指定比例尺的输出范围

linear(0.9);    //返回 0
linear(2.3);    //返回 175
linear(3.3);    //返回 300
```

### 项目案例

```javascript
var width = 500
var height = 600
//选择body添加一个w:500,h:500,class:main的svg
var svg = d3.select(body).append('svg')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'main')
var radiusAll = [1203, 802,792,735,10]
//每次返回5个半径数据相差大小不定，取数组中的最大值，最小值为0 设置定义域
var max = d3.max(radiusAll);
//比例尺的输出范围，最大为width/2-100
var maxRange = cfg.w/2 -100
var linear = d3.scale.linear()
        .domain([0, max]) //设置比例尺度的定义域
        .range([0, maxRange]); //比例尺的输出范围
//使用比例尺
var falg = 2
var radiusData  = []
for(var i = 0,len = radiusAll.length; i<len; i++){
//获取半径，最高峰值1.5倍大于最大宽度限制
  radiusData.push(radiusAll[i])
  radarRadius = linear(radiusAll[i])
  if(radarRadius>width/2){
    radarRadius = cfg.w/2 -100
  }
  if(radarRadius<20){
    radarRadius = 20
  }
  svg.selectAll(".circle")
    .data(radiusData)
    .enter()
    .append('svg:circle')
    .attr("cx", width/2)
    .attr("cy", height/2)
    .attr('r', radarRadius )
    .style("stroke", function(j, i){
        return cfg.color[falg]})
    .style("stroke-width", "3px")
    .style("fill-opacity", 0) 
    .attr('id', 'id_'+i+'')

    falg++
    radarRadius = 0
    radiusData.length = 0
}
```




