---
title: d3.js-地图实战
date: 2017-03-14 19:46:46
tags: D3.js
---
###  1.绘制一个简直的地图

#### 地图绘制四步曲

1.创建一个svg容器

```javascript
var width = 900
var height = 800
var mapUrl = '../data/chongqing.json'

var svg = d3.select('body')
    .append('svg')
    .attr('width', width)
    .attr('height', height)

```


2.定义一个投影函数

```javascript
var projection = d3.geo.mercator()  
    .center([107, 31])  
    .scale(850)  
    .translate([width/2, height/2])  
```

由于 GeoJSON 文件中的地图数据，都是经度和纬度的信息，它们都是三维的。要在网页上显示的是二维的，所以要设定一个投影函数来转换经度纬度。如上所示，我们用 d3.geo.mercator() 的投影方式。关于各种投影方式的函数，可以参

center() 函数是用于取得或设置投影(地图)的中心位置，[107,31] 指的是经度和纬度。
scale() 函数用于取得或设置投影(地图)的缩放系数。
translate() 函数用于设定平移。

3. 定义 path 函数

```javasscript
var path = d3.geo.path()  
    .projection(projection) 
```

将上面的投影函数，作为参数，放入 path 中。这个 path 函数后面在绘制的时候就会用于转换经度纬度为平面信息，用于绘制。

3. 读取文件并绘制

```javascript
d3.json(mapUrl, function(error, root) {  
  if (error){
    return console.error(error)
  }     
  svg.selectAll("path")  
    .data( root.features )  
    .enter()  
    .append("path")  
    .attr("stroke","#a7dbff")  
    .attr("stroke-width",1)  
    .attr("fill", '#35a5fb')  
    .attr("d", path )  
    .on("mouseover",function(d,i){  
      d3.select(this)  
      .attr("fill","yellow");  
    })  
    .on("mouseout",function(d,i){  
      d3.select(this)  
      .attr("fill",'#35a5fb')
    }) 
})    
```
d3.json 是用于读取文件
请注意，再次声明一下，这个函数的调用需要你搭建一个服务器。接下来，就是给 svg 中添加 path。要注意 attr("d",path) 这一行代码，前面也说过，这个其实相当于：

### 其他相关API扩展
#### 其他地理投影API
albers.parallels - 取得或者设置投影的两条标准平行线。
d3.geo.albersUsa - 用于展示美国地图的Albers复合投影。
d3.geo.albers - Albers等面积圆锥投影。
d3.geo.azimuthalEqualArea.raw - 原始方位角等面积投影。
d3.geo.azimuthalEqualArea - 方位角等面积投影。
d3.geo.azimuthalEquidistant.raw - 原始方位角等距投影。
d3.geo.azimuthalEquidistant - 方位角等距投影。
d3.geo.conicConformal.raw - 原始圆锥正形投影。
d3.geo.conicConformal - 圆锥正形投影。
d3.geo.conicEqualArea.raw 原始圆锥等面积投影 (a.k.a. Albers)。
d3.geo.conicEqualArea 圆锥等面积投影 (a.k.a. Albers)。
d3.geo.conicEquidistant.raw - 原始圆锥等距投影。
d3.geo.conicEquidistant - 圆锥等距投影。
d3.geo.equirectangular.raw - 原始等角投影（普通圆柱投影）。
d3.geo.equirectangular - 等角投影（普通圆柱投影）。
d3.geo.gnomonic.raw - 原始球心投影。
d3.geo.gnomonic - 球心投影。
d3.geo.mercator.raw - 原始墨卡托投影。
d3.geo.mercator - 球形墨卡托投影。
d3.geo.orthographic.raw - 原始方位角直角投影。
d3.geo.orthographic - 方位角直角投影。
d3.geo.projectionMutator - 从可变的原始投影创建一个标准投影。
d3.geo.projection - 从原始投影创建一个标准投影。
d3.geo.stereographic.raw - 原始方位角立体投影。
d3.geo.stereographic - 方位角立体投影。
d3.geo.transverseMercator.raw - 原始横向墨卡托投影